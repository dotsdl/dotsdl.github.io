<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>the smaller things - software</title><link href="https://smallerthings.org/" rel="alternate"></link><link href="https://smallerthings.org/feeds/software.atom.xml" rel="self"></link><id>https://smallerthings.org/</id><updated>2017-01-27T13:50:00-07:00</updated><subtitle>states &amp; transitions</subtitle><entry><title>development log,Â 2017.01.27</title><link href="https://smallerthings.org/2016-devlog-01-27.html" rel="alternate"></link><published>2017-01-27T13:50:00-07:00</published><updated>2017-01-27T13:50:00-07:00</updated><author><name>dotsdl</name></author><id>tag:smallerthings.org,2017-01-27:/2016-devlog-01-27.html</id><summary type="html">&lt;p&gt;New year, new&amp;nbsp;developments&lt;/p&gt;</summary><content type="html">&lt;p&gt;2016 was a hell of a year, for many reasons (good, not so good, and everywhere in between).
I&amp;#8217;m hoping to share more about last year in a retrospective in the next week, but as part of the new year we are now living in, I wanted to start doing a weekly-ish series on what I&amp;#8217;ve been up to on development&amp;nbsp;fronts.&lt;/p&gt;
&lt;p&gt;I&amp;#8217;m now employed by the &lt;a href="http://becksteinlab.physics.asu.edu/"&gt;Beckstein Lab&lt;/a&gt; as a research software engineer, and with this role comes a shift in my focus to software development.
Over the course of my PhD I built a &lt;a href="http://datreant.org/"&gt;few&lt;/a&gt; &lt;a href="https://github.com/datreant/MDSynthesis"&gt;software&lt;/a&gt; &lt;a href="https://github.com/Becksteinlab/mdworks"&gt;libraries&lt;/a&gt; and contributed to at least a &lt;a href="http://www.mdanalysis.org/"&gt;couple&lt;/a&gt; &lt;a href="https://github.com/materialsproject/fireworks"&gt;others&lt;/a&gt;.
My efforts over the next few months (it&amp;#8217;s a short contract) are geared almost exclusively toward finishing up loose ends on many of these projects, plus at least one brand new one.
These projects form the core of our software stack, so getting them on a solid footing before I leave is&amp;nbsp;high-priority.&lt;/p&gt;
&lt;p&gt;As the first entry in this series, I think it&amp;#8217;s worthwhile to share the current status of these projects (from my perspective), and where I&amp;#8217;m hoping/expecting them to go.
The opportunity to have a focus on software in an academic setting is not common, so I really hope we can come out on the other end with some real interesting developments.&amp;nbsp;:)&lt;/p&gt;
&lt;h1&gt;datreant&lt;/h1&gt;
&lt;p&gt;Of all my software projects, &lt;a href="http://datreant.org/"&gt;&lt;code&gt;datreant&lt;/code&gt;&lt;/a&gt; is the library I poured the most effort into during my PhD, and it forms the core of my software environment.
Since I work with simulation data that can&amp;#8217;t easily be shoehorned into a database solution, this library gives a database-ish abstract interface to the filesystem, making it possible to work with my data at a high level while still being able to drill down to any level of detail.
This interface is also used heavily for my workflow automation, since it makes writing code that refers to filesystem components (files, directories) in an object-oriented way totally&amp;nbsp;cake.&lt;/p&gt;
&lt;p&gt;This library is pretty stable in terms of its overall behavior, though the &lt;a href="https://github.com/datreant/datreant.core/issues"&gt;issue tracker&lt;/a&gt; has a lot of things that are wide open and need to be resolved.
Some of these are relatively easy, but others will take some more thought.
My hope is to get at least one, if not two, releases out before I&amp;#8217;m finished here.
I&amp;#8217;ll probably continue to work on &lt;code&gt;datreant&lt;/code&gt; after my time in the lab is up, however.
It&amp;#8217;s a bit unique, and I think has a lot of potential use for a lot of people.
More on that&amp;nbsp;soon.&lt;/p&gt;
&lt;h1&gt;MDSynthesis&lt;/h1&gt;
&lt;p&gt;&lt;code&gt;datreant&lt;/code&gt; started life as &lt;a href="https://github.com/datreant/MDSynthesis"&gt;&lt;strong&gt;MDSynthesis&lt;/strong&gt;&lt;/a&gt;, a library I developed to maintain my sanity in the face of increasing volume and variety of simulation data I was collecting.
Eventually the molecular dynamics-agnostic pieces of &lt;strong&gt;MDSynthesis&lt;/strong&gt; were stripped out and became &lt;code&gt;datreant&lt;/code&gt;, leaving &lt;strong&gt;MDSynthesis&lt;/strong&gt; itself as a pretty light library by comparison.
This library is how I use &lt;code&gt;datreant&lt;/code&gt; in practice, since it gives a lot of convenient functionality for working with &lt;span class="caps"&gt;MD&lt;/span&gt;&amp;nbsp;data.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;MDSynthesis&lt;/strong&gt; isn&amp;#8217;t a large codebase, and I&amp;#8217;d like to keep it that way.
Over the past few months I&amp;#8217;ve been leaning more toward making &lt;code&gt;datreant&lt;/code&gt;, in particular &lt;code&gt;datreant.core&lt;/code&gt;, the recommended library for doing all things datreant-like, and leaving &lt;strong&gt;MDSynthesis&lt;/strong&gt; in maintenance mode.
The trouble with the library is that by its nature it can tend to accumulate a lot of &lt;em&gt;ad hoc&lt;/em&gt; components, and it also has to track the development of both &lt;code&gt;datreant&lt;/code&gt; and &lt;strong&gt;MDAnalysis&lt;/strong&gt;, which makes it a bit a of a pain to maintain.
In a world of limited time and energy, I&amp;#8217;m more prone to say that users use &lt;code&gt;datreant&lt;/code&gt; and roll their own conveniences for working with their data, even if they&amp;#8217;re doing &lt;span class="caps"&gt;MD&lt;/span&gt;, but on the other hand &lt;strong&gt;MDSynthesis&lt;/strong&gt; remains a nice little library with incredible&amp;nbsp;utility.&lt;/p&gt;
&lt;p&gt;Future uncertain, but for now it persists.
If anyone is interested in taking on more of a maintenance role for this library, get in&amp;nbsp;touch.&lt;/p&gt;
&lt;h1&gt;MDAnalysis&lt;/h1&gt;
&lt;p&gt;&lt;a href="http://www.mdanalysis.org/"&gt;&lt;strong&gt;MDAnalysis&lt;/strong&gt;&lt;/a&gt; has a strong developer base, and my contributions over the last year have been mostly in design discussions and as co-developer of the &lt;a href="https://github.com/MDAnalysis/mdanalysis/pull/815"&gt;shiny, new topology system&lt;/a&gt;.
There&amp;#8217;s a lot of cool stuff coming through the pipe in the next release, and I&amp;#8217;m not concerned about the library&amp;#8217;s&amp;nbsp;future.&lt;/p&gt;
&lt;p&gt;Over the next few months I&amp;#8217;m hoping we can get &lt;a href="https://github.com/MDAnalysis/mdanalysis/issues/878"&gt;pickling finally working for all objects&lt;/a&gt; so that parallelization can work more generally and as users expect, not just in a shared-memory environment as it does currently.
Since the new topology system encapsulates things much more cleanly in the &lt;code&gt;Universe&lt;/code&gt; object, this should be very doable, but we just have yet to settle on a specific choice of solution.
I&amp;#8217;m hoping to scrape together a chunk of time to put forth a working proposal; I already have a &lt;a href="https://github.com/MDAnalysis/mdanalysis/pull/831"&gt;prototype of a piece of this&lt;/a&gt; from a long time ago, but it needs to be picked up&amp;nbsp;again.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;MDAnalysis&lt;/strong&gt; is a great library with a great existing team, and so I&amp;#8217;m likely to put my larger efforts elsewhere over the next few months.
I&amp;#8217;m still going to be involved in discussions, though, since I think I&amp;#8217;m recognized among the group as someone who thinks a lot about the implications of design choices, duplication of effort and interfaces,&amp;nbsp;etc.&lt;/p&gt;
&lt;h1&gt;mdworks&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://github.com/Becksteinlab/mdworks"&gt;&lt;code&gt;mdworks&lt;/code&gt;&lt;/a&gt; is a prototype Python module with building blocks for building workflow graphs using &lt;a href="https://pythonhosted.org/FireWorks/"&gt;Fireworks&lt;/a&gt;, an automated workflow engine we&amp;#8217;ve started using in the lab.
It&amp;#8217;s very early development, and mostly functions as a code dump of things I currently use, but the things currently present are fairly&amp;nbsp;general-purpose.&lt;/p&gt;
&lt;p&gt;The trouble with using automated workflows is that they require not only code to generate the graphs, but also the infrastructure to serve and execute them, so it&amp;#8217;s nontrivial to get up and running.
One of my tasks over the next few months is to get &lt;code&gt;mdworks&lt;/code&gt; into a state that&amp;#8217;s fairly usable by other members in the lab (which means clear documentation, understandable design choices, functional pieces) and also provide what&amp;#8217;s needed to get up and running infrastructure-wise (the hard&amp;nbsp;part).&lt;/p&gt;
&lt;p&gt;I strongly believe using automated workflows is the way forward in this field, and if we can achieve our goals here it can pay dividends well into the future.
We can ask more complicated questions much more easily when the logistics of computing are largely fire-and-forget, and it makes expensive human time available for doing other&amp;nbsp;things.&lt;/p&gt;
&lt;h1&gt;alchemlyb&lt;/h1&gt;
&lt;p&gt;The final software project of note that I&amp;#8217;m putting effort into is &lt;a href="https://github.com/alchemistry/alchemlyb"&gt;&lt;code&gt;alchemlyb&lt;/code&gt;&lt;/a&gt;.
This library aims to make doing so-called &lt;em&gt;alchemical&lt;/em&gt; free energy calculations easier for the average computationalist, providing machinery for parsing data, preprocessing it, estimating free energies, and checking convergence and robustness.
It comes as a response to the rather wild-west nature of doing these calculations once you have data to do them with, as most every lab has their own in-house code to do these calculations.
This is a lot of duplication of effort, and it&amp;#8217;s prone to error.
Existing solutions that are publicly available, such as &lt;a href="https://github.com/MobleyLab/alchemical-analysis"&gt;&lt;code&gt;alchemical-analysis.py&lt;/code&gt;&lt;/a&gt;, although perhaps correct and useful, are often monolithic and inflexible.
These also generally don&amp;#8217;t scale beyond single-machine use, so growing datasets become a&amp;nbsp;problem.&lt;/p&gt;
&lt;p&gt;The development of this library is an informal collaboration between several folks in the field, with me loosely heading up the project (since I&amp;#8217;m paid to do software, not strictly science).
Because it is pretty well-defined from the start (these kind of calculations have the benefit of years of experience behind them), I think we can stand this library up within the next few months and push out at least a couple releases.
Because of the community interest I&amp;#8217;m not worried that we won&amp;#8217;t have maintenance long-term, but there&amp;#8217;s a lot of work to be done yet.
This next week we&amp;#8217;re laying out issues for all the major components so discussion and development can begin in&amp;nbsp;earnest.&lt;/p&gt;
&lt;p&gt;This is an exciting effort, the results of which should be a firm software foundation going forward for the field.
I&amp;#8217;m a strong believer in the idea that in order for us to focus our efforts on new, harder things, we have to make established techniques routine and easy.
This is a specific effort to make that so for alchemical free energy&amp;nbsp;calculations.&lt;/p&gt;
&lt;p&gt;Check out &lt;a href="https://gist.github.com/dotsdl/a41e5756a58e1775e3e3a915f07bfd37"&gt;this gist&lt;/a&gt; if you&amp;#8217;re interested in the design ideas behind this&amp;nbsp;library.&lt;/p&gt;
&lt;h1&gt;Let&amp;#8217;s get to&amp;nbsp;work&lt;/h1&gt;
&lt;p&gt;Obviously from this list there is no shortage of things to do, and I&amp;#8217;m realistic enough to know that we probably can&amp;#8217;t achieve everything.
We will, try, though, with the aim of inching forward to stability.
There are relatively few people in the lab who&amp;#8217;ve taken an interest in software engineering as I have, so the stack needs to persist long enough to survive without another software-focused person around to keep things going.
Whether that works out, only time will&amp;nbsp;tell.&lt;/p&gt;
&lt;p&gt;&amp;#8212;&amp;nbsp;david&lt;/p&gt;</content><category term="software"></category><category term="python"></category><category term="engineering"></category><category term="development"></category></entry><entry><title>datreant atÂ SciPy</title><link href="https://smallerthings.org/2016-scipy-datreant.html" rel="alternate"></link><published>2016-09-22T13:30:00-07:00</published><updated>2016-09-22T13:30:00-07:00</updated><author><name>dotsdl</name></author><id>tag:smallerthings.org,2016-09-22:/2016-scipy-datreant.html</id><summary type="html">&lt;p&gt;I gave a talk at SciPy 2016 on&amp;nbsp;datreant.&lt;/p&gt;</summary><content type="html">&lt;p&gt;It&amp;#8217;s been a whirlwind of a summer, and now that it&amp;#8217;s officially fall I think I
should take a moment to mention one event I failed to document for posterity
here on my blog. This summer I had the opportunity to present a core project
of mine at &lt;a href="http://scipy2016.scipy.org/"&gt;SciPy 2016&lt;/a&gt;: &lt;a href="http://datreant.org"&gt;&lt;strong&gt;datreant&lt;/strong&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;This project forms the core of my data analysis workflow these days, both
automated and human components (also known as me). The talk functions as a nice
20-minute overview of &lt;strong&gt;datreant&lt;/strong&gt;, what problem it addresses, and how it works.
Give it a gander if you find yourself drowning in data but can&amp;#8217;t really escape
using the filesystem itself as your data store of&amp;nbsp;choice.&lt;/p&gt;
&lt;p&gt;Also, there&amp;#8217;s now a citable paper for &lt;strong&gt;datreant&lt;/strong&gt;. Check out the &lt;a href="http://conference.scipy.org/proceedings/scipy2016"&gt;SciPy 2016
proceedings&lt;/a&gt;, and consider
citing &lt;strong&gt;datreant&lt;/strong&gt; if it proves useful to you in your&amp;nbsp;work:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span class="caps"&gt;D. L.&lt;/span&gt; Dotson, &lt;span class="caps"&gt;S. L.&lt;/span&gt; Seyler, M. Linke, &lt;span class="caps"&gt;R. J.&lt;/span&gt; Gowers, O. Beckstein. &lt;a href="http://conference.scipy.org/proceedings/scipy2016/david_dotson.html"&gt;datreant:
persistent, Pythonic trees for heterogeneous
data&lt;/a&gt;. In
S. Benthall and S. Rostrup, editors, &lt;em&gt;Proceedings of the 15th Python in Science
Conference&lt;/em&gt;, pages 51-56, Austin, &lt;span class="caps"&gt;TX&lt;/span&gt;, 2016.&amp;nbsp;SciPy.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;This conference was particularly interesting because I managed to convince not only
my partner-in-crime and labmate &lt;a href="https://twitter.com/slseyler"&gt;Sean Seyler&lt;/a&gt; to attend,
but also my mentor and &lt;span class="caps"&gt;PI&lt;/span&gt; &lt;a href="https://twitter.com/orbeckst"&gt;Oliver Beckstein&lt;/a&gt; to check
it out for the first time. I&amp;#8217;m happy to say they came away &lt;a href="https://twitter.com/orbeckst/status/754143774121480196"&gt;very
satisfied&lt;/a&gt; with the&amp;nbsp;experience!&lt;/p&gt;
&lt;p&gt;I should mention that Oliver also gave a very nice talk on
&lt;a href="https://www.youtube.com/watch?v=zVQGFysYDew"&gt;MDAnalysis&lt;/a&gt;, giving special emphasis
on our vibrant community of active developers and users. We also produced a
&lt;a href="http://conference.scipy.org/proceedings/scipy2016/oliver_beckstein.html"&gt;proceedings
publication&lt;/a&gt;
that functions as an update to the &lt;a href="http://dx.doi.org/10.1002/jcc.21787"&gt;original MDAnalysis
paper&lt;/a&gt;, giving details on both new and
upcoming functionality and design changes in the library&amp;nbsp;since.&lt;/p&gt;
&lt;p&gt;With that, it&amp;#8217;s back to thesis writing. My projects are all nicely wrapped up
at the moment and I&amp;#8217;m currently in the throes of compiling it all into an
exhausting&amp;#8230;er, exhaustive document. I&amp;#8217;ll be fun again after November 4th.&amp;nbsp;:D&lt;/p&gt;
&lt;p&gt;&amp;#8212;&amp;nbsp;david&lt;/p&gt;</content><category term="software"></category><category term="python"></category><category term="data"></category><category term="filesystems"></category></entry><entry><title>Answering biological questions using HDF5 and physics-based simulationÂ data</title><link href="https://smallerthings.org/2015-hdf5-physics-simulations.html" rel="alternate"></link><published>2015-09-17T15:00:00-07:00</published><updated>2015-09-17T15:00:00-07:00</updated><author><name>dotsdl</name></author><id>tag:smallerthings.org,2015-09-17:/2015-hdf5-physics-simulations.html</id><summary type="html">&lt;p&gt;I recently had the privilege to share a bit of my work on the &lt;span class="caps"&gt;HDF&lt;/span&gt; Group blog by
way of a &lt;a class="reference external" href="http://hdfgroup.org/wp/2015/08/answering-biological-questions-using-hdf5-and-physics-based-simulation-data/"&gt;guest post&lt;/a&gt;. In &lt;a class="reference external" href="http://becksteinlab.physics.asu.edu/"&gt;our lab&lt;/a&gt; we generate increasingly large and
diverse simulation datasets, and maintaining sanity and productivity in spite
of these scale ups have been a challenge. This â¦&lt;/p&gt;</summary><content type="html">&lt;p&gt;I recently had the privilege to share a bit of my work on the &lt;span class="caps"&gt;HDF&lt;/span&gt; Group blog by
way of a &lt;a class="reference external" href="http://hdfgroup.org/wp/2015/08/answering-biological-questions-using-hdf5-and-physics-based-simulation-data/"&gt;guest post&lt;/a&gt;. In &lt;a class="reference external" href="http://becksteinlab.physics.asu.edu/"&gt;our lab&lt;/a&gt; we generate increasingly large and
diverse simulation datasets, and maintaining sanity and productivity in spite
of these scale ups have been a challenge. This post details one approach to the
problem, and it makes heady use of &lt;span class="caps"&gt;HDF5&lt;/span&gt; for efficient data storage and&amp;nbsp;retrieval.&lt;/p&gt;
&lt;p&gt;If you have an interest in Big Data challenges and aren&amp;#8217;t already subscribed to
the &lt;a class="reference external" href="http://blog.hdfgroup.org/"&gt;&lt;span class="caps"&gt;HDF&lt;/span&gt; Group blog&lt;/a&gt;, one of those two things should change.&amp;nbsp;:D&lt;/p&gt;
&lt;p&gt;&amp;#8212;&amp;nbsp;david&lt;/p&gt;
</content><category term="software"></category><category term="HDF5"></category><category term="python"></category><category term="PyTables"></category><category term="h5py"></category><category term="molecular dynamics"></category><category term="data"></category><category term="science"></category></entry><entry><title>SciPy 2015: come for the conference, stay for theÂ people</title><link href="https://smallerthings.org/2015-scipy.html" rel="alternate"></link><published>2015-08-11T13:00:00-07:00</published><updated>2015-08-11T13:00:00-07:00</updated><author><name>dotsdl</name></author><id>tag:smallerthings.org,2015-08-11:/2015-scipy.html</id><summary type="html">&lt;p&gt;It&amp;#8217;s now been several weeks since I returned from my first &lt;a class="reference external" href="http://scipy2015.scipy.org/"&gt;SciPy&lt;/a&gt;, and I realized I
had yet to actually write about it on my own blog. Well, late is better than
never. If nothing else, the time delay has allowed the dust to settle for a
more coherent â¦&lt;/p&gt;</summary><content type="html">&lt;p&gt;It&amp;#8217;s now been several weeks since I returned from my first &lt;a class="reference external" href="http://scipy2015.scipy.org/"&gt;SciPy&lt;/a&gt;, and I realized I
had yet to actually write about it on my own blog. Well, late is better than
never. If nothing else, the time delay has allowed the dust to settle for a
more coherent post.&amp;nbsp;:)&lt;/p&gt;
&lt;p&gt;Short version: &lt;strong&gt;SciPy was perhaps the most fun I&amp;#8217;ve had at a&amp;nbsp;conference.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Why? Several reasons. First, the audience is very diverse: most are working in
science but many others are working in tech and software development. This is
in contrast to many of the conferences I&amp;#8217;ve attended which are primarily
scientists working in my field, very few of which spend much of their time
developing and maintaining&amp;nbsp;software.&lt;/p&gt;
&lt;p&gt;Second, the conference itself is different than most in terms of its basic
structure, composed&amp;nbsp;of:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;2 days of&amp;nbsp;tutorials&lt;/li&gt;
&lt;li&gt;3 days of main&amp;nbsp;conference&lt;/li&gt;
&lt;li&gt;2 days of&amp;nbsp;sprints&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Since this was my first time attending, I decided to get the full SciPy
experience and attend the whole week. I&amp;#8217;m glad I&amp;nbsp;did.&lt;/p&gt;
&lt;p&gt;The two tutorials I most enjoyed were those on &lt;a class="reference external" href="https://github.com/amueller/scipy_2015_sklearn_tutorial"&gt;machine learning with
scikit-learn&lt;/a&gt; and &lt;a class="reference external" href="https://github.com/chdoig/scipy2015-blaze-bokeh"&gt;using bokeh to create interactive plots&lt;/a&gt;. Although I had
played briefly with both packages before, these sessions offered a more
thorough view to what can be done with them, and most importantly, &lt;em&gt;how&lt;/em&gt;.
In particular, for &lt;a class="reference external" href="http://scikit-learn.org/"&gt;scikit-learn&lt;/a&gt; I was struck at how well thought-out
its built-in parameter sweeps and cross-validation machinery was, and it&amp;#8217;s given me
ideas for how to build similar robustness machinery for other packages, e.g.
&lt;a class="reference external" href="https://github.com/projectmesa/mesa"&gt;mesa&lt;/a&gt;. I&amp;#8217;m not entirely sure yet where I might make use of &lt;a class="reference external" href="http://bokeh.pydata.org/"&gt;bokeh&lt;/a&gt;, since
ultimately plots I produce need to be exported to a printable form. However,
for publishing data visualizations to the web it&amp;#8217;s a great&amp;nbsp;option.&lt;/p&gt;
&lt;p&gt;The conference itself sported three simultaneous tracks of talks, a poster
session, and daily lightning talks. A few of my&amp;nbsp;favorites:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="https://youtu.be/1kkFZ4P-XHg"&gt;Dask: Out-of-Core Numpy and Pandas through Task Scheduling&lt;/a&gt;: a talk on
&lt;a class="reference external" href="http://dask.pydata.org/"&gt;dask&lt;/a&gt;, which provides data structures that can do complex out-of-core
operations with an &lt;span class="caps"&gt;API&lt;/span&gt; similar to numpy and&amp;nbsp;pandas.&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://youtu.be/nddj5OA8LJo"&gt;&lt;span class="caps"&gt;HDF5&lt;/span&gt; is Eating the World&lt;/a&gt;: a talk by Andrew Collette (author of &lt;a class="reference external" href="http://www.h5py.org/"&gt;h5py&lt;/a&gt;) on
ways to wield &lt;span class="caps"&gt;HDF5&lt;/span&gt; effectively, as well as exciting new developments in &lt;span class="caps"&gt;HDF5&lt;/span&gt;&amp;nbsp;itself.&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://youtu.be/TBBtOeY2Q78"&gt;Deep Learning: Tips from the Road&lt;/a&gt;: a talk by Kyle Kastner on deep
learning, its uses, and its limitations. This is a great, short intro to
neural&amp;nbsp;networks.&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://youtu.be/lcySLoprPMc"&gt;Agent Based Modeling in Python with Mesa&lt;/a&gt;: introduction of &lt;a class="reference external" href="https://github.com/projectmesa/mesa"&gt;mesa&lt;/a&gt;, a new
package that fills a hole in the python ecosystem: a package for building
agent-based&amp;nbsp;simulations.&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://youtu.be/_3YoaeoiIFI"&gt;VisPy: Harnessing the &lt;span class="caps"&gt;GPU&lt;/span&gt; for Fast, High Level Visualization&lt;/a&gt;: a great talk
by Luke Campagnola on the capabilities of &lt;a class="reference external" href="http://vispy.org/"&gt;VisPy&lt;/a&gt; to generate complex visualizations
in real time using the &lt;span class="caps"&gt;GPU&lt;/span&gt; and&amp;nbsp;OpenGL.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;There are many more where that came from,&amp;nbsp;including:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="https://youtu.be/ZSM-tmbBZ5E"&gt;Time Series Analysis for Network&amp;nbsp;Security&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://youtu.be/TGGGDpb04Yc"&gt;Statistical Thinking for Data&amp;nbsp;Science&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://youtu.be/X0pAhJgySxk"&gt;xray: &lt;span class="caps"&gt;ND&lt;/span&gt; Labeled Arrays and&amp;nbsp;Datasets&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://youtu.be/JSFZ3i3WcjQ"&gt;RESTful &lt;span class="caps"&gt;HDF&lt;/span&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://youtu.be/OuhtpxGuboY"&gt;Teaching with IPython/Jupyter Notebooks and&amp;nbsp;JupyterHub&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://youtu.be/eYIPEDnp5C4"&gt;Accelerating Python with the Numba &lt;span class="caps"&gt;JIT&lt;/span&gt;&amp;nbsp;Compiler&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Each day of the main conference featured a keynote, all three of which are
worth&amp;nbsp;watching.&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="https://youtu.be/MNosMXFGtBE"&gt;Data Science at the New York Times by Chris&amp;nbsp;Wiggins&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://youtu.be/kHdkFyGCxiY"&gt;My Data Journey with Python by Wes&amp;nbsp;McKinney&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://youtu.be/5GlNDD7qbP4"&gt;State of the Tools by Jake&amp;nbsp;VanderPlas&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Since it&amp;#8217;s impossible to attend everything, I&amp;#8217;m extremely thankful all of these talks
can be viewed directly on YouTube. Check out the &lt;a class="reference external" href="https://www.youtube.com/playlist?list=PLYx7XA2nY5Gcpabmu61kKcToLz0FapmHu"&gt;full playlist&lt;/a&gt; for plenty&amp;nbsp;more.&lt;/p&gt;
&lt;p&gt;The last two days featured sprints. For the uninitiated: these are long blocks of time
during which you can work on issues in a codebase collaboratively and in-person
with others. At SciPy, however, mostly these are just a great way to get
involved in new projects and work alongside some of the core developers. I&amp;#8217;m
particularly interested in machine learning applications to simulation work, so
I split my time between working on &lt;a class="reference external" href="http://scikit-learn.org/"&gt;scikit-learn&lt;/a&gt; and &lt;a class="reference external" href="https://github.com/projectmesa/mesa"&gt;mesa&lt;/a&gt;. Although I only
ended up submitting a couple PRs to &lt;a class="reference external" href="http://scikit-learn.org/"&gt;scikit-learn&lt;/a&gt; over the course of the
weekend, I got a good sense of the structure of the packages and had memorable
discussions with the developers. The only problem now is figuring out where
I&amp;#8217;m going to devote my (rather limited) time outside of graduate school to open
source projects that aren&amp;#8217;t &lt;a class="reference external" href="http://mdanalysis.org"&gt;mdanalysis&lt;/a&gt; related. The upside is there are
really no bad&amp;nbsp;choices.&lt;/p&gt;
&lt;p&gt;Besides all the new tools and technical developments SciPy made me aware of, what I
value most from the conference are the people that I met and the connections I
made with them. The scientific Python community includes some of the most
intelligent and passionate people I&amp;#8217;ve ever met. It was a pleasure to spend a
week with a few of&amp;nbsp;them.&lt;/p&gt;
&lt;p&gt;&amp;#8212;&amp;nbsp;david&lt;/p&gt;
</content><category term="software"></category><category term="data"></category><category term="science"></category><category term="python"></category><category term="scipy"></category></entry><entry><title>SciPy 2015: IntroducingÂ MDSynthesis</title><link href="https://smallerthings.org/2015-introducing-mdsynthesis.html" rel="alternate"></link><published>2015-06-29T23:00:00-07:00</published><updated>2015-06-29T23:00:00-07:00</updated><author><name>dotsdl</name></author><id>tag:smallerthings.org,2015-06-29:/2015-introducing-mdsynthesis.html</id><summary type="html">&lt;p&gt;Although I&amp;#8217;ve announced as much on &lt;a class="reference external" href="https://twitter.com/dotsdl/status/598638811581526016"&gt;Twitter&lt;/a&gt;, I&amp;#8217;m excited to present a poster
talk this year at &lt;a class="reference external" href="http://www.scipy2015.scipy.org"&gt;SciPy&lt;/a&gt;. It&amp;#8217;ll be my first time attending, and I&amp;#8217;m looking
forward to meeting others that are passionate in advancing science through
software, and in particular with&amp;nbsp;Python.&lt;/p&gt;
&lt;p&gt;I&amp;#8217;ll â¦&lt;/p&gt;</summary><content type="html">&lt;p&gt;Although I&amp;#8217;ve announced as much on &lt;a class="reference external" href="https://twitter.com/dotsdl/status/598638811581526016"&gt;Twitter&lt;/a&gt;, I&amp;#8217;m excited to present a poster
talk this year at &lt;a class="reference external" href="http://www.scipy2015.scipy.org"&gt;SciPy&lt;/a&gt;. It&amp;#8217;ll be my first time attending, and I&amp;#8217;m looking
forward to meeting others that are passionate in advancing science through
software, and in particular with&amp;nbsp;Python.&lt;/p&gt;
&lt;p&gt;I&amp;#8217;ll be presenting a software package I&amp;#8217;ve been working on called
&lt;a class="reference external" href="https://github.com/Becksteinlab/MDSynthesis"&gt;MDSynthesis&lt;/a&gt;, which has vastly improved the way I do science with &lt;a class="reference external" href="https://en.wikipedia.org/wiki/Molecular_dynamics"&gt;molecular
dynamics&lt;/a&gt; (&lt;span class="caps"&gt;MD&lt;/span&gt;) simulations. MDSynthesis addresses an important bottleneck in
&lt;span class="caps"&gt;MD&lt;/span&gt; research: going from raw simulation data (perhaps many terabytes, spread
over tens to hundreds of simulations) to information that allows us to answer
biophysical questions. I&amp;#8217;ll&amp;nbsp;explain&amp;#8230;&lt;/p&gt;
&lt;p&gt;One of the obstacles to using modern data science tools like &lt;a class="reference external" href="http://pandas.pydata.org/"&gt;pandas&lt;/a&gt; to analyze
&lt;span class="caps"&gt;MD&lt;/span&gt; data is the multitude of formats the &lt;span class="caps"&gt;MD&lt;/span&gt; ecosystem trades in. &lt;a class="reference external" href="http://www.charmm.org/"&gt;&lt;span class="caps"&gt;CHARMM&lt;/span&gt;&lt;/a&gt; and
&lt;a class="reference external" href="http://www.ks.uiuc.edu/Research/namd/"&gt;&lt;span class="caps"&gt;NAMD&lt;/span&gt;&lt;/a&gt; use &lt;span class="caps"&gt;DCD&lt;/span&gt; files, &lt;a class="reference external" href="http://ambermd.org/"&gt;&lt;span class="caps"&gt;AMBER&lt;/span&gt;&lt;/a&gt; uses a NetCDF-derived format, and &lt;a class="reference external" href="http://www.gromacs.org/"&gt;&lt;span class="caps"&gt;GROMACS&lt;/span&gt;&lt;/a&gt; uses
an &lt;span class="caps"&gt;XDR&lt;/span&gt; format; all told, there are at least 13 different formats used for
storage of &lt;span class="caps"&gt;MD&lt;/span&gt; trajectory data, each with unique strengths and limitations.
&lt;a class="reference external" href="http://mdanalysis.org"&gt;MDAnalysis&lt;/a&gt; is a python package that provides a common interface to many of
these formats, turning trajectory data into numpy arrays that can be handled
with the full power of the python&amp;nbsp;universe.&lt;/p&gt;
&lt;p&gt;But the diversity in trajectory formats isn&amp;#8217;t the only obstacle to distilling
information from &lt;span class="caps"&gt;MD&lt;/span&gt; data; what&amp;#8217;s also a problem is the variety of inputs
available for building any particular simulation system. For example, when
simulating a single protein, I have a lot of choices in: forcefields, starting
conformation, protonation states, solvent, ions, temperature and pressure
algorithm&amp;#8230;the list goes on. The picture becomes more complicated when one
wants to run different types of &lt;span class="caps"&gt;MD&lt;/span&gt;, as there are also a wide variety of
enhanced-sampling methods available for&amp;nbsp;use.&lt;/p&gt;
&lt;p&gt;And that&amp;#8217;s still not all: trajectory data can take a while to churn through
to extract measures we are interested in, depending on the measure and depending
on the number/length of trajectories. It&amp;#8217;s therefore useful to store intermediate
data so we can interactively explore&amp;nbsp;it.&lt;/p&gt;
&lt;p&gt;Managing this complexity is burdensome, and frankly, boring. I&amp;#8217;d rather spend
my limited time and energy doing science than managing my ever-growing
collection of data. Furthermore, I want quick, specific, and easy access to the
data I have so that I can begin answering&amp;nbsp;questions.&lt;/p&gt;
&lt;p&gt;MDSynthesis has done this for me. The basic idea behind the package is to
provide persistent objects that serve as data storage units, called
&lt;em&gt;containers&lt;/em&gt;.  One such container is the &lt;a class="reference external" href="http://mdsynthesis.readthedocs.org/en/master/Sim.html"&gt;Sim&lt;/a&gt; object. This can store any
number of MDAnalysis Universe definitions (topologies + trajectories), along
with atom selections for later use. Sims store their state directly to disk in
a thin &lt;span class="caps"&gt;HDF5&lt;/span&gt; database (using &lt;a class="reference external" href="http://www.pytables.org/"&gt;PyTables&lt;/a&gt;), allowing recall of the same Sim
instance later, or at the same time in another python session. Most
importantly, Sims give an interface for easily storing pandas and numpy data
structures in &lt;span class="caps"&gt;HDF5&lt;/span&gt; format with no fuss, with just as easy recall. Almost any
other python data structure can also be stored just as easily; the container
will pickle what it can&amp;#8217;t serialize to &lt;span class="caps"&gt;HDF5&lt;/span&gt;.&lt;/p&gt;
&lt;p&gt;Beyond Sims, there are also &lt;a class="reference external" href="http://mdsynthesis.readthedocs.org/en/master/Group.html"&gt;Groups&lt;/a&gt;, which can store Sims and other Groups as
members for easy recall of whole ensembles of containers and easy aggregation
of their stored&amp;nbsp;data.&lt;/p&gt;
&lt;p&gt;Those are the basic elements; more details can be found in the &lt;a class="reference external" href="http://mdsynthesis.readthedocs.org/en/master/index.html"&gt;docs&lt;/a&gt;. We just
made an alpha release of the package last week which is already usable for
daily work, but the project is still very young. What&amp;#8217;s particularly exciting
for me is that development of the package has already fed back into development
of MDAnalysis, with even more performance and persistence functionality on the&amp;nbsp;way.&lt;/p&gt;
&lt;p&gt;If you find this software useful, let me know! If it&amp;#8217;s missing something
that it sorely needs, feel free to submit an &lt;a class="reference external" href="https://github.com/Becksteinlab/MDSynthesis/issues"&gt;issue&lt;/a&gt; and we&amp;#8217;ll get
cracking on it. Pull requests are also&amp;nbsp;welcome!&lt;/p&gt;
&lt;p&gt;&amp;#8212;&amp;nbsp;david&lt;/p&gt;
</content><category term="software"></category><category term="molecular dynamics"></category><category term="data"></category><category term="science"></category></entry></feed>