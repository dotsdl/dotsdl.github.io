<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>the smaller things</title><link href="http://smallerthings.org/" rel="alternate"></link><link href="http://smallerthings.org/feeds/software.atom.xml" rel="self"></link><id>http://smallerthings.org/</id><updated>2015-08-11T13:00:00-07:00</updated><entry><title>SciPy 2015: come for the conference, stay for the people</title><link href="http://smallerthings.org/2015-scipy.html" rel="alternate"></link><updated>2015-08-11T13:00:00-07:00</updated><author><name>dotsdl</name></author><id>tag:smallerthings.org,2015-08-11:2015-scipy.html</id><summary type="html">&lt;p&gt;It&amp;#8217;s now been several weeks since I returned from my first &lt;a class="reference external" href="http://scipy2015.scipy.org/"&gt;SciPy&lt;/a&gt;, and I realized I
had yet to actually write about it on my own blog. Well, late is better than
never. If nothing else, the time delay has allowed the dust to settle for a
more coherent post.&amp;nbsp;:)&lt;/p&gt;
&lt;p&gt;Short version: &lt;strong&gt;SciPy was perhaps the most fun I&amp;#8217;ve had at a&amp;nbsp;conference.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Why? Several reasons. First, the audience is very diverse: most are working in
science but many others are working in tech and software development. This is
in contrast to many of the conferences I&amp;#8217;ve attended which are primarily
scientists working in my field, very few of which spend much of their time
developing and maintaining&amp;nbsp;software.&lt;/p&gt;
&lt;p&gt;Second, the conference itself is different than most in terms of its basic
structure, composed&amp;nbsp;of:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;2 days of&amp;nbsp;tutorials&lt;/li&gt;
&lt;li&gt;3 days of main&amp;nbsp;conference&lt;/li&gt;
&lt;li&gt;2 days of&amp;nbsp;sprints&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Since this was my first time attending, I decided to get the full SciPy
experience and attend the whole week. I&amp;#8217;m glad I&amp;nbsp;did.&lt;/p&gt;
&lt;p&gt;The two tutorials I most enjoyed were those on &lt;a class="reference external" href="https://github.com/amueller/scipy_2015_sklearn_tutorial"&gt;machine learning with
scikit-learn&lt;/a&gt; and &lt;a class="reference external" href="https://github.com/chdoig/scipy2015-blaze-bokeh"&gt;using bokeh to create interactive plots&lt;/a&gt;. Although I had
played briefly with both packages before, these sessions offered a more
thorough view to what can be done with them, and most importantly, &lt;em&gt;how&lt;/em&gt;.
In particular, for &lt;a class="reference external" href="http://scikit-learn.org/"&gt;scikit-learn&lt;/a&gt; I was struck at how well thought-out
its built-in parameter sweeps and cross-validation machinery was, and it&amp;#8217;s given me
ideas for how to build similar robustness machinery for other packages, e.g.
&lt;a class="reference external" href="https://github.com/projectmesa/mesa"&gt;mesa&lt;/a&gt;. I&amp;#8217;m not entirely sure yet where I might make use of &lt;a class="reference external" href="http://bokeh.pydata.org/"&gt;bokeh&lt;/a&gt;, since
ultimately plots I produce need to be exported to a printable form. However,
for publishing data visualizations to the web it&amp;#8217;s a great&amp;nbsp;option.&lt;/p&gt;
&lt;p&gt;The conference itself sported three simultaneous tracks of talks, a poster
session, and daily lightning talks. A few of my&amp;nbsp;favorites:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="https://youtu.be/1kkFZ4P-XHg"&gt;Dask: Out-of-Core Numpy and Pandas through Task Scheduling&lt;/a&gt;: a talk on
&lt;a class="reference external" href="http://dask.pydata.org/"&gt;dask&lt;/a&gt;, which provides data structures that can do complex out-of-core
operations with an &lt;span class="caps"&gt;API&lt;/span&gt; similar to numpy and&amp;nbsp;pandas.&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://youtu.be/nddj5OA8LJo"&gt;&lt;span class="caps"&gt;HDF5&lt;/span&gt; is Eating the World&lt;/a&gt;: a talk by Andrew Collette (author of &lt;a class="reference external" href="http://www.h5py.org/"&gt;h5py&lt;/a&gt;) on
ways to wield &lt;span class="caps"&gt;HDF5&lt;/span&gt; effectively, as well as exciting new developments in &lt;span class="caps"&gt;HDF5&lt;/span&gt;&amp;nbsp;itself.&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://youtu.be/TBBtOeY2Q78"&gt;Deep Learning: Tips from the Road&lt;/a&gt;: a talk by Kyle Kastner on deep
learning, its uses, and its limitations. This is a great, short intro to
neural&amp;nbsp;networks.&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://youtu.be/lcySLoprPMc"&gt;Agent Based Modeling in Python with Mesa&lt;/a&gt;: introduction of &lt;a class="reference external" href="https://github.com/projectmesa/mesa"&gt;mesa&lt;/a&gt;, a new
package that fills a hole in the python ecosystem: a package for building
agent-based&amp;nbsp;simulations.&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://youtu.be/_3YoaeoiIFI"&gt;VisPy: Harnessing the &lt;span class="caps"&gt;GPU&lt;/span&gt; for Fast, High Level Visualization&lt;/a&gt;: a great talk
by Luke Campagnola on the capabilities of &lt;a class="reference external" href="http://vispy.org/"&gt;VisPy&lt;/a&gt; to generate complex visualizations
in real time using the &lt;span class="caps"&gt;GPU&lt;/span&gt; and&amp;nbsp;OpenGL.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;There are many more where that came from,&amp;nbsp;including:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="https://youtu.be/ZSM-tmbBZ5E"&gt;Time Series Analysis for Network&amp;nbsp;Security&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://youtu.be/TGGGDpb04Yc"&gt;Statistical Thinking for Data&amp;nbsp;Science&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://youtu.be/X0pAhJgySxk"&gt;xray: &lt;span class="caps"&gt;ND&lt;/span&gt; Labeled Arrays and&amp;nbsp;Datasets&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://youtu.be/JSFZ3i3WcjQ"&gt;RESTful &lt;span class="caps"&gt;HDF&lt;/span&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://youtu.be/OuhtpxGuboY"&gt;Teaching with IPython/Jupyter Notebooks and&amp;nbsp;JupyterHub&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://youtu.be/eYIPEDnp5C4"&gt;Accelerating Python with the Numba &lt;span class="caps"&gt;JIT&lt;/span&gt;&amp;nbsp;Compiler&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Each day of the main conference featured a keynote, all three of which are
worth&amp;nbsp;watching.&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="https://youtu.be/MNosMXFGtBE"&gt;Data Science at the New York Times by Chris&amp;nbsp;Wiggins&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://youtu.be/kHdkFyGCxiY"&gt;My Data Journey with Python by Wes&amp;nbsp;McKinney&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://youtu.be/5GlNDD7qbP4"&gt;State of the Tools by Jake&amp;nbsp;VanderPlas&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Since it&amp;#8217;s impossible to attend everything, I&amp;#8217;m extremely thankful all of these talks
can be viewed directly on YouTube. Check out the &lt;a class="reference external" href="https://www.youtube.com/playlist?list=PLYx7XA2nY5Gcpabmu61kKcToLz0FapmHu"&gt;full playlist&lt;/a&gt; for plenty&amp;nbsp;more.&lt;/p&gt;
&lt;p&gt;The last two days featured sprints. For the uninitiated: these are long blocks of time
during which you can work on issues in a codebase collaboratively and in-person
with others. At SciPy, however, mostly these are just a great way to get
involved in new projects and work alongside some of the core developers. I&amp;#8217;m
particularly interested in machine learning applications to simulation work, so
I split my time between working on &lt;a class="reference external" href="http://scikit-learn.org/"&gt;scikit-learn&lt;/a&gt; and &lt;a class="reference external" href="https://github.com/projectmesa/mesa"&gt;mesa&lt;/a&gt;. Although I only
ended up submitting a couple PRs to &lt;a class="reference external" href="http://scikit-learn.org/"&gt;scikit-learn&lt;/a&gt; over the course of the
weekend, I got a good sense of the structure of the packages and had memorable
discussions with the developers. The only problem now is figuring out where
I&amp;#8217;m going to devote my (rather limited) time outside of graduate school to open
source projects that aren&amp;#8217;t &lt;a class="reference external" href="http://mdanalysis.org"&gt;mdanalysis&lt;/a&gt; related. The upside is there are
really no bad&amp;nbsp;choices.&lt;/p&gt;
&lt;p&gt;Besides all the new tools and technical developments SciPy made me aware of, what I
value most from the conference are the people that I met and the connections I
made with them. The scientific Python community includes some of the most
intelligent and passionate people I&amp;#8217;ve ever met. It was a pleasure to spend a
week with a few of&amp;nbsp;them.&lt;/p&gt;
&lt;p&gt;&amp;#8212;&amp;nbsp;david&lt;/p&gt;
</summary><category term="data"></category><category term="science"></category><category term="python"></category><category term="scipy"></category></entry><entry><title>SciPy 2015: Introducing MDSynthesis</title><link href="http://smallerthings.org/2015-introducing-mdsynthesis.html" rel="alternate"></link><updated>2015-06-29T23:00:00-07:00</updated><author><name>dotsdl</name></author><id>tag:smallerthings.org,2015-06-29:2015-introducing-mdsynthesis.html</id><summary type="html">&lt;p&gt;Although I&amp;#8217;ve announced as much on &lt;a class="reference external" href="https://twitter.com/dotsdl/status/598638811581526016"&gt;Twitter&lt;/a&gt;, I&amp;#8217;m excited to present a poster
talk this year at &lt;a class="reference external" href="http://www.scipy2015.scipy.org"&gt;SciPy&lt;/a&gt;. It&amp;#8217;ll be my first time attending, and I&amp;#8217;m looking
forward to meeting others that are passionate in advancing science through
software, and in particular with&amp;nbsp;Python.&lt;/p&gt;
&lt;p&gt;I&amp;#8217;ll be presenting a software package I&amp;#8217;ve been working on called
&lt;a class="reference external" href="https://github.com/Becksteinlab/MDSynthesis"&gt;MDSynthesis&lt;/a&gt;, which has vastly improved the way I do science with &lt;a class="reference external" href="https://en.wikipedia.org/wiki/Molecular_dynamics"&gt;molecular
dynamics&lt;/a&gt; (&lt;span class="caps"&gt;MD&lt;/span&gt;) simulations. MDSynthesis addresses an important bottleneck in
&lt;span class="caps"&gt;MD&lt;/span&gt; research: going from raw simulation data (perhaps many terabytes, spread
over tens to hundreds of simulations) to information that allows us to answer
biophysical questions. I&amp;#8217;ll&amp;nbsp;explain&amp;#8230;&lt;/p&gt;
&lt;p&gt;One of the obstacles to using modern data science tools like &lt;a class="reference external" href="http://pandas.pydata.org/"&gt;pandas&lt;/a&gt; to analyze
&lt;span class="caps"&gt;MD&lt;/span&gt; data is the multitude of formats the &lt;span class="caps"&gt;MD&lt;/span&gt; ecosystem trades in. &lt;a class="reference external" href="http://www.charmm.org/"&gt;&lt;span class="caps"&gt;CHARMM&lt;/span&gt;&lt;/a&gt; and
&lt;a class="reference external" href="http://www.ks.uiuc.edu/Research/namd/"&gt;&lt;span class="caps"&gt;NAMD&lt;/span&gt;&lt;/a&gt; use &lt;span class="caps"&gt;DCD&lt;/span&gt; files, &lt;a class="reference external" href="http://ambermd.org/"&gt;&lt;span class="caps"&gt;AMBER&lt;/span&gt;&lt;/a&gt; uses a NetCDF-derived format, and &lt;a class="reference external" href="http://www.gromacs.org/"&gt;&lt;span class="caps"&gt;GROMACS&lt;/span&gt;&lt;/a&gt; uses
an &lt;span class="caps"&gt;XDR&lt;/span&gt; format; all told, there are at least 13 different formats used for
storage of &lt;span class="caps"&gt;MD&lt;/span&gt; trajectory data, each with unique strengths and limitations.
&lt;a class="reference external" href="http://mdanalysis.org"&gt;MDAnalysis&lt;/a&gt; is a python package that provides a common interface to many of
these formats, turning trajectory data into numpy arrays that can be handled
with the full power of the python&amp;nbsp;universe.&lt;/p&gt;
&lt;p&gt;But the diversity in trajectory formats isn&amp;#8217;t the only obstacle to distilling
information from &lt;span class="caps"&gt;MD&lt;/span&gt; data; what&amp;#8217;s also a problem is the variety of inputs
available for building any particular simulation system. For example, when
simulating a single protein, I have a lot of choices in: forcefields, starting
conformation, protonation states, solvent, ions, temperature and pressure
algorithm&amp;#8230;the list goes on. The picture becomes more complicated when one
wants to run different types of &lt;span class="caps"&gt;MD&lt;/span&gt;, as there are also a wide variety of
enhanced-sampling methods available for&amp;nbsp;use.&lt;/p&gt;
&lt;p&gt;And that&amp;#8217;s still not all: trajectory data can take a while to churn through
to extract measures we are interested in, depending on the measure and depending
on the number/length of trajectories. It&amp;#8217;s therefore useful to store intermediate
data so we can interactively explore&amp;nbsp;it.&lt;/p&gt;
&lt;p&gt;Managing this complexity is burdensome, and frankly, boring. I&amp;#8217;d rather spend
my limited time and energy doing science than managing my ever-growing
collection of data. Furthermore, I want quick, specific, and easy access to the
data I have so that I can begin answering&amp;nbsp;questions.&lt;/p&gt;
&lt;p&gt;MDSynthesis has done this for me. The basic idea behind the package is to
provide persistent objects that serve as data storage units, called
&lt;em&gt;containers&lt;/em&gt;.  One such container is the &lt;a class="reference external" href="http://mdsynthesis.readthedocs.org/en/master/Sim.html"&gt;Sim&lt;/a&gt; object. This can store any
number of MDAnalysis Universe definitions (topologies + trajectories), along
with atom selections for later use. Sims store their state directly to disk in
a thin &lt;span class="caps"&gt;HDF5&lt;/span&gt; database (using &lt;a class="reference external" href="http://www.pytables.org/"&gt;PyTables&lt;/a&gt;), allowing recall of the same Sim
instance later, or at the same time in another python session. Most
importantly, Sims give an interface for easily storing pandas and numpy data
structures in &lt;span class="caps"&gt;HDF5&lt;/span&gt; format with no fuss, with just as easy recall. Almost any
other python data structure can also be stored just as easily; the container
will pickle what it can&amp;#8217;t serialize to &lt;span class="caps"&gt;HDF5&lt;/span&gt;.&lt;/p&gt;
&lt;p&gt;Beyond Sims, there are also &lt;a class="reference external" href="http://mdsynthesis.readthedocs.org/en/master/Group.html"&gt;Groups&lt;/a&gt;, which can store Sims and other Groups as
members for easy recall of whole ensembles of containers and easy aggregation
of their stored&amp;nbsp;data.&lt;/p&gt;
&lt;p&gt;Those are the basic elements; more details can be found in the &lt;a class="reference external" href="http://mdsynthesis.readthedocs.org/en/master/index.html"&gt;docs&lt;/a&gt;. We just
made an alpha release of the package last week which is already usable for
daily work, but the project is still very young. What&amp;#8217;s particularly exciting
for me is that development of the package has already fed back into development
of MDAnalysis, with even more performance and persistence functionality on the&amp;nbsp;way.&lt;/p&gt;
&lt;p&gt;If you find this software useful, let me know! If it&amp;#8217;s missing something
that it sorely needs, feel free to submit an &lt;a class="reference external" href="https://github.com/Becksteinlab/MDSynthesis/issues"&gt;issue&lt;/a&gt; and we&amp;#8217;ll get
cracking on it. Pull requests are also&amp;nbsp;welcome!&lt;/p&gt;
&lt;p&gt;&amp;#8212;&amp;nbsp;david&lt;/p&gt;
</summary><category term="molecular dynamics"></category><category term="data"></category><category term="science"></category></entry></feed>